<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180705 16:49:55.559" generator="Robot 3.0.4 (Python 2.7.14 on win32)">
<suite source="C:\Robot_Vijoy\OMS_Regression\Test Cases\OMS_OrderLifeCycle_RoughCopy.robot" id="s1" name="OMS OrderLifeCycle RoughCopy">
<test id="s1-t1" name="OMS_TC_097_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast MA region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:49:55.956" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:49:55.957" starttime="20180705 16:49:55.955"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:49:56.045" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:49:56.045" starttime="20180705 16:49:55.957"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:49:56.046" level="INFO">OMS_TC_097_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast MA region</msg>
<msg timestamp="20180705 16:49:56.046" level="INFO">${ScenarioNumber} = 97</msg>
<status status="PASS" endtime="20180705 16:49:56.046" starttime="20180705 16:49:56.045"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:49:56.134" level="INFO">{u'payment type': 'Visa', u's.no': '97', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast MA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast MA'}</msg>
<msg timestamp="20180705 16:49:56.134" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '97', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'V...</msg>
<status status="PASS" endtime="20180705 16:49:56.134" starttime="20180705 16:49:56.046"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:49:56.251" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 29 for the order type: petnet
{u'sku': '2280691', u'emailid': 'Northeast_MA_Test@petco.com', u'address type': 'Northeast MA', u'firstname': 'Northeast', u'city': 'Millville', u'lastname': 'MA', u's.no': '29', u'zipcode': '01529', u'qty': '2', u'state': 'MA', u'dayphone': '9876543210', u'addressline1': '117 Wilton Blvd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '97', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast MA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast MA'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MA" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Millville" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" MiddleName="" State="MA" Title="" ZipCode="01529"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:49:56.251" starttime="20180705 16:49:56.135"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:49:58.347" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050419562076622997" OrderNo="Y103812869"/&gt;
****************************************
****************************************
Order Header Key: 201807050419562076622997

Order is placed successfully... Order Number is Y103812869</msg>
<msg timestamp="20180705 16:49:58.348" level="INFO">${orderNo} = Y103812869</msg>
<status status="PASS" endtime="20180705 16:49:58.348" starttime="20180705 16:49:56.251"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:49:58.348" level="INFO">${orderNo} = Y103812869</msg>
<status status="PASS" endtime="20180705 16:49:58.349" starttime="20180705 16:49:58.348"></status>
</kw>
<status status="PASS" endtime="20180705 16:49:58.349" starttime="20180705 16:49:55.954"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:49:58.440" level="INFO">Authorizing the Order... Order No passed is Y103812869 and Order Header Key 201807050419562076622997
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:49:58.441" starttime="20180705 16:49:58.350"></status>
</kw>
<status status="PASS" endtime="20180705 16:49:58.441" starttime="20180705 16:49:58.349"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:49:58.443" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:49:58.640" starttime="20180705 16:49:58.442"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:49:58.641" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812869' </msg>
<msg timestamp="20180705 16:49:58.943" level="INFO">@{queryResults} = [ ('Y103812869', '201807050419562076622997', '201807050419562076622998', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:49:58.943" starttime="20180705 16:49:58.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:49:58.943" level="INFO">${orderLineKey} = 201807050419562076622998</msg>
<status status="PASS" endtime="20180705 16:49:58.944" starttime="20180705 16:49:58.943"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:49:58.944" starttime="20180705 16:49:58.944"></status>
</kw>
<status status="PASS" endtime="20180705 16:49:58.944" starttime="20180705 16:49:58.442"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:00.951" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812869'
[('Y103812869', '201807050419562076622997', '201807050419562076622998', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812869"  OrderLineKey="201807050419562076622998" OrderHeaderKey="201807050419562076622997" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:00.951" starttime="20180705 16:49:58.945"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:01.510" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812869' OrderHeaderKey='201807050419562076622997' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:01.510" starttime="20180705 16:50:00.951"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:01.694" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:01.694" starttime="20180705 16:50:01.510"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:01.695" starttime="20180705 16:49:58.945"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:04.949" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812869'
[('Y103812869', '201807050419562076622997', '201807050419562076622998', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812869" OrderHeaderKey="201807050419562076622997" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050419562076622997" OrderLineKey="201807050419562076622998"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:04.950" starttime="20180705 16:50:01.696"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:04.950" starttime="20180705 16:50:01.695"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:04.951" critical="yes" starttime="20180705 16:49:55.953"></status>
</test>
<test id="s1-t2" name="OMS_TC_098_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast RI region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:04.954" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:04.954" starttime="20180705 16:50:04.954"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:05.040" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:05.040" starttime="20180705 16:50:04.954"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:05.041" level="INFO">OMS_TC_098_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast RI region</msg>
<msg timestamp="20180705 16:50:05.041" level="INFO">${ScenarioNumber} = 98</msg>
<status status="PASS" endtime="20180705 16:50:05.041" starttime="20180705 16:50:05.041"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:05.128" level="INFO">{u'payment type': 'Visa', u's.no': '98', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast RI region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast RI'}</msg>
<msg timestamp="20180705 16:50:05.128" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '98', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'V...</msg>
<status status="PASS" endtime="20180705 16:50:05.128" starttime="20180705 16:50:05.041"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:05.243" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 30 for the order type: petnet
{u'sku': '228664', u'emailid': 'Northeast_RI_Test@petco.com', u'address type': 'Northeast RI', u'firstname': 'Northeast', u'city': 'Ashaway', u'lastname': 'RI', u's.no': '30', u'zipcode': '02804', u'qty': '2', u'state': 'RI', u'dayphone': '9876543210', u'addressline1': '2321 Charles St', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '228664'}
Single_ Line
{u'payment type': 'Visa', u's.no': '98', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast RI region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast RI'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
228664
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="RI" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="2321 Charles St" AddressLine2="" AddressLine3="" City="Ashaway" Country="US" DayPhone="9876543210" EMailID="Northeast_RI_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="RI" State="RI" ZipCode="02804"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="228664" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="2321 Charles St" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Ashaway" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_RI_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="RI" MiddleName="" State="RI" Title="" ZipCode="02804"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="2321 Charles St" AddressLine2="" AddressLine3="" City="Ashaway" Country="US" DayPhone="9876543210" EMailID="Northeast_RI_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="RI" State="RI" ZipCode="02804"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:05.243" starttime="20180705 16:50:05.128"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:05.857" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420052076623056" OrderNo="Y103812870"/&gt;
****************************************
****************************************
Order Header Key: 201807050420052076623056

Order is placed successfully... Order Number is Y103812870</msg>
<msg timestamp="20180705 16:50:05.857" level="INFO">${orderNo} = Y103812870</msg>
<status status="PASS" endtime="20180705 16:50:05.857" starttime="20180705 16:50:05.244"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:05.859" level="INFO">${orderNo} = Y103812870</msg>
<status status="PASS" endtime="20180705 16:50:05.859" starttime="20180705 16:50:05.858"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:05.859" starttime="20180705 16:50:04.953"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:05.937" level="INFO">Authorizing the Order... Order No passed is Y103812870 and Order Header Key 201807050420052076623056
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:05.937" starttime="20180705 16:50:05.860"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:05.938" starttime="20180705 16:50:05.860"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:05.939" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:06.019" starttime="20180705 16:50:05.939"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:06.020" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812870' </msg>
<msg timestamp="20180705 16:50:06.230" level="INFO">@{queryResults} = [ ('Y103812870', '201807050420052076623056', '201807050420052076623057', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:06.230" starttime="20180705 16:50:06.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:06.231" level="INFO">${orderLineKey} = 201807050420052076623057</msg>
<status status="PASS" endtime="20180705 16:50:06.231" starttime="20180705 16:50:06.230"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:06.231" starttime="20180705 16:50:06.231"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:06.231" starttime="20180705 16:50:05.938"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:07.087" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812870'
[('Y103812870', '201807050420052076623056', '201807050420052076623057', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812870"  OrderLineKey="201807050420052076623057" OrderHeaderKey="201807050420052076623056" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:07.087" starttime="20180705 16:50:06.232"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:07.353" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812870' OrderHeaderKey='201807050420052076623056' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:07.354" starttime="20180705 16:50:07.087"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:07.419" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:07.419" starttime="20180705 16:50:07.354"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:07.419" starttime="20180705 16:50:06.232"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:08.286" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812870'
[('Y103812870', '201807050420052076623056', '201807050420052076623057', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812870" OrderHeaderKey="201807050420052076623056" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420052076623056" OrderLineKey="201807050420052076623057"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:08.287" starttime="20180705 16:50:07.420"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:08.287" starttime="20180705 16:50:07.420"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:08.287" critical="yes" starttime="20180705 16:50:04.952"></status>
</test>
<test id="s1-t3" name="OMS_TC_099_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast MD region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:08.292" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:08.292" starttime="20180705 16:50:08.291"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:08.376" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:08.376" starttime="20180705 16:50:08.292"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:08.377" level="INFO">OMS_TC_099_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast MD region</msg>
<msg timestamp="20180705 16:50:08.377" level="INFO">${ScenarioNumber} = 99</msg>
<status status="PASS" endtime="20180705 16:50:08.377" starttime="20180705 16:50:08.376"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:08.463" level="INFO">{u'payment type': 'Visa', u's.no': '99', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast MD region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast MD'}</msg>
<msg timestamp="20180705 16:50:08.464" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '99', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'V...</msg>
<status status="PASS" endtime="20180705 16:50:08.464" starttime="20180705 16:50:08.377"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:08.582" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 31 for the order type: petnet
{u'sku': '322822', u'emailid': 'Northeast_MD_Test@petco.com', u'address type': 'Northeast MD', u'firstname': 'Northeast', u'city': 'Accident', u'lastname': 'MD', u's.no': '31', u'zipcode': '21520.0', u'qty': '2', u'state': 'MD', u'dayphone': '9876543210', u'addressline1': '535 N Court Ave', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '322822'}
Single_ Line
{u'payment type': 'Visa', u's.no': '99', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast MD region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast MD'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
322822
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MD" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="535 N Court Ave" AddressLine2="" AddressLine3="" City="Accident" Country="US" DayPhone="9876543210" EMailID="Northeast_MD_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MD" State="MD" ZipCode="21520.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="322822" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="535 N Court Ave" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Accident" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_MD_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MD" MiddleName="" State="MD" Title="" ZipCode="21520.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="535 N Court Ave" AddressLine2="" AddressLine3="" City="Accident" Country="US" DayPhone="9876543210" EMailID="Northeast_MD_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MD" State="MD" ZipCode="21520.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:08.582" starttime="20180705 16:50:08.464"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:09.238" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420082076623112" OrderNo="Y103812871"/&gt;
****************************************
****************************************
Order Header Key: 201807050420082076623112

Order is placed successfully... Order Number is Y103812871</msg>
<msg timestamp="20180705 16:50:09.238" level="INFO">${orderNo} = Y103812871</msg>
<status status="PASS" endtime="20180705 16:50:09.238" starttime="20180705 16:50:08.583"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:09.239" level="INFO">${orderNo} = Y103812871</msg>
<status status="PASS" endtime="20180705 16:50:09.239" starttime="20180705 16:50:09.239"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:09.240" starttime="20180705 16:50:08.291"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:09.266" level="INFO">Authorizing the Order... Order No passed is Y103812871 and Order Header Key 201807050420082076623112
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:09.267" starttime="20180705 16:50:09.241"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:09.267" starttime="20180705 16:50:09.240"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:09.268" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:09.334" starttime="20180705 16:50:09.268"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:09.335" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812871' </msg>
<msg timestamp="20180705 16:50:09.494" level="INFO">@{queryResults} = [ ('Y103812871', '201807050420082076623112', '201807050420082076623113', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:09.494" starttime="20180705 16:50:09.334"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:09.495" level="INFO">${orderLineKey} = 201807050420082076623113</msg>
<status status="PASS" endtime="20180705 16:50:09.495" starttime="20180705 16:50:09.495"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:09.496" starttime="20180705 16:50:09.495"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:09.496" starttime="20180705 16:50:09.268"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:10.293" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812871'
[('Y103812871', '201807050420082076623112', '201807050420082076623113', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812871"  OrderLineKey="201807050420082076623113" OrderHeaderKey="201807050420082076623112" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:10.294" starttime="20180705 16:50:09.497"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:10.434" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812871' OrderHeaderKey='201807050420082076623112' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:10.434" starttime="20180705 16:50:10.294"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:10.501" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:10.501" starttime="20180705 16:50:10.434"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:10.501" starttime="20180705 16:50:09.496"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:11.259" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812871'
[('Y103812871', '201807050420082076623112', '201807050420082076623113', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812871" OrderHeaderKey="201807050420082076623112" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420082076623112" OrderLineKey="201807050420082076623113"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:11.260" starttime="20180705 16:50:10.502"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:11.260" starttime="20180705 16:50:10.502"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:11.261" critical="yes" starttime="20180705 16:50:08.290"></status>
</test>
<test id="s1-t4" name="OMS_TC_100_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast WV region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:11.265" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:11.265" starttime="20180705 16:50:11.264"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:11.351" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:11.351" starttime="20180705 16:50:11.265"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:11.352" level="INFO">OMS_TC_100_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast WV region</msg>
<msg timestamp="20180705 16:50:11.352" level="INFO">${ScenarioNumber} = 100</msg>
<status status="PASS" endtime="20180705 16:50:11.352" starttime="20180705 16:50:11.351"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:11.435" level="INFO">{u'payment type': 'Visa', u's.no': '100', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast WV region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast WV'}</msg>
<msg timestamp="20180705 16:50:11.436" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '100', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:11.436" starttime="20180705 16:50:11.352"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:11.548" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 32 for the order type: petnet
{u'sku': '992704', u'emailid': 'Northeast_WV_Test@petco.com', u'address type': 'Northeast WV', u'firstname': 'Northeast', u'city': 'Morgantown', u'lastname': 'WV', u's.no': '32', u'zipcode': '26501.0', u'qty': '2', u'state': 'WV', u'dayphone': '9876543210', u'addressline1': '410 Highland Trace', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '992704'}
Single_ Line
{u'payment type': 'Visa', u's.no': '100', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast WV region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast WV'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
992704
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="WV" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="410 Highland Trace" AddressLine2="" AddressLine3="" City="Morgantown" Country="US" DayPhone="9876543210" EMailID="Northeast_WV_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="WV" State="WV" ZipCode="26501.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="992704" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="410 Highland Trace" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Morgantown" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_WV_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="WV" MiddleName="" State="WV" Title="" ZipCode="26501.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="410 Highland Trace" AddressLine2="" AddressLine3="" City="Morgantown" Country="US" DayPhone="9876543210" EMailID="Northeast_WV_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="WV" State="WV" ZipCode="26501.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:11.548" starttime="20180705 16:50:11.436"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:12.168" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420112076623147" OrderNo="Y103812872"/&gt;
****************************************
****************************************
Order Header Key: 201807050420112076623147

Order is placed successfully... Order Number is Y103812872</msg>
<msg timestamp="20180705 16:50:12.169" level="INFO">${orderNo} = Y103812872</msg>
<status status="PASS" endtime="20180705 16:50:12.169" starttime="20180705 16:50:11.548"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:12.170" level="INFO">${orderNo} = Y103812872</msg>
<status status="PASS" endtime="20180705 16:50:12.170" starttime="20180705 16:50:12.169"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:12.170" starttime="20180705 16:50:11.264"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:12.197" level="INFO">Authorizing the Order... Order No passed is Y103812872 and Order Header Key 201807050420112076623147
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:12.197" starttime="20180705 16:50:12.171"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:12.197" starttime="20180705 16:50:12.170"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:12.199" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:12.310" starttime="20180705 16:50:12.198"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:12.311" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812872' </msg>
<msg timestamp="20180705 16:50:12.581" level="INFO">@{queryResults} = [ ('Y103812872', '201807050420112076623147', '201807050420112076623148', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:12.581" starttime="20180705 16:50:12.310"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:12.582" level="INFO">${orderLineKey} = 201807050420112076623148</msg>
<status status="PASS" endtime="20180705 16:50:12.582" starttime="20180705 16:50:12.582"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:12.583" starttime="20180705 16:50:12.583"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:12.583" starttime="20180705 16:50:12.198"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:13.378" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812872'
[('Y103812872', '201807050420112076623147', '201807050420112076623148', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812872"  OrderLineKey="201807050420112076623148" OrderHeaderKey="201807050420112076623147" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:13.379" starttime="20180705 16:50:12.584"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:13.542" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812872' OrderHeaderKey='201807050420112076623147' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:13.542" starttime="20180705 16:50:13.379"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:13.603" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:13.604" starttime="20180705 16:50:13.543"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:13.604" starttime="20180705 16:50:12.584"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:14.362" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812872'
[('Y103812872', '201807050420112076623147', '201807050420112076623148', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812872" OrderHeaderKey="201807050420112076623147" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420112076623147" OrderLineKey="201807050420112076623148"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:14.362" starttime="20180705 16:50:13.605"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:14.362" starttime="20180705 16:50:13.604"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:14.363" critical="yes" starttime="20180705 16:50:11.263"></status>
</test>
<test id="s1-t5" name="OMS_TC_101_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South VA region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:14.367" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:14.367" starttime="20180705 16:50:14.367"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:14.452" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:14.453" starttime="20180705 16:50:14.367"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:14.453" level="INFO">OMS_TC_101_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South VA region</msg>
<msg timestamp="20180705 16:50:14.454" level="INFO">${ScenarioNumber} = 101</msg>
<status status="PASS" endtime="20180705 16:50:14.454" starttime="20180705 16:50:14.453"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:14.538" level="INFO">{u'payment type': 'Visa', u's.no': '101', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South VA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South VA'}</msg>
<msg timestamp="20180705 16:50:14.539" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '101', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:14.539" starttime="20180705 16:50:14.454"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:14.661" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 33 for the order type: petnet
{u'sku': '2280691', u'emailid': 'South_VA_Test@petco.com', u'address type': 'South VA', u'firstname': 'South', u'city': 'Staffordsville', u'lastname': 'VA', u's.no': '33', u'zipcode': '24167.0', u'qty': '2', u'state': 'VA', u'dayphone': '9876543210', u'addressline1': '170 Hutton Ranch Rd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '101', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South VA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South VA'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="VA" FirstName="South" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="170 Hutton Ranch Rd" AddressLine2="" AddressLine3="" City="Staffordsville" Country="US" DayPhone="9876543210" EMailID="South_VA_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="VA" State="VA" ZipCode="24167.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="170 Hutton Ranch Rd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Staffordsville" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="South_VA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="VA" MiddleName="" State="VA" Title="" ZipCode="24167.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="170 Hutton Ranch Rd" AddressLine2="" AddressLine3="" City="Staffordsville" Country="US" DayPhone="9876543210" EMailID="South_VA_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="VA" State="VA" ZipCode="24167.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:14.661" starttime="20180705 16:50:14.539"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:15.183" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420142076623186" OrderNo="Y103812873"/&gt;
****************************************
****************************************
Order Header Key: 201807050420142076623186

Order is placed successfully... Order Number is Y103812873</msg>
<msg timestamp="20180705 16:50:15.183" level="INFO">${orderNo} = Y103812873</msg>
<status status="PASS" endtime="20180705 16:50:15.184" starttime="20180705 16:50:14.661"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:15.185" level="INFO">${orderNo} = Y103812873</msg>
<status status="PASS" endtime="20180705 16:50:15.185" starttime="20180705 16:50:15.184"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:15.185" starttime="20180705 16:50:14.366"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:15.229" level="INFO">Authorizing the Order... Order No passed is Y103812873 and Order Header Key 201807050420142076623186
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:15.230" starttime="20180705 16:50:15.187"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:15.230" starttime="20180705 16:50:15.186"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:15.231" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:15.305" starttime="20180705 16:50:15.231"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:15.305" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812873' </msg>
<msg timestamp="20180705 16:50:15.579" level="INFO">@{queryResults} = [ ('Y103812873', '201807050420142076623186', '201807050420142076623187', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:15.579" starttime="20180705 16:50:15.305"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:15.580" level="INFO">${orderLineKey} = 201807050420142076623187</msg>
<status status="PASS" endtime="20180705 16:50:15.580" starttime="20180705 16:50:15.580"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:15.580" starttime="20180705 16:50:15.580"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:15.581" starttime="20180705 16:50:15.230"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:15.801" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812873'
[('Y103812873', '201807050420142076623186', '201807050420142076623187', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812873"  OrderLineKey="201807050420142076623187" OrderHeaderKey="201807050420142076623186" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:15.802" starttime="20180705 16:50:15.582"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:15.944" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812873' OrderHeaderKey='201807050420142076623186' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:15.944" starttime="20180705 16:50:15.802"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:16.009" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:16.009" starttime="20180705 16:50:15.944"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:16.009" starttime="20180705 16:50:15.581"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:16.694" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812873'
[('Y103812873', '201807050420142076623186', '201807050420142076623187', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812873" OrderHeaderKey="201807050420142076623186" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420142076623186" OrderLineKey="201807050420142076623187"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:16.694" starttime="20180705 16:50:16.010"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:16.695" starttime="20180705 16:50:16.010"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:16.695" critical="yes" starttime="20180705 16:50:14.365"></status>
</test>
<test id="s1-t6" name="OMS_TC_102_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South WV region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:16.701" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:16.701" starttime="20180705 16:50:16.700"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:16.789" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:16.789" starttime="20180705 16:50:16.701"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:16.790" level="INFO">OMS_TC_102_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South WV region</msg>
<msg timestamp="20180705 16:50:16.790" level="INFO">${ScenarioNumber} = 102</msg>
<status status="PASS" endtime="20180705 16:50:16.790" starttime="20180705 16:50:16.790"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:16.875" level="INFO">{u'payment type': 'Visa', u's.no': '102', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South WV region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South WV'}</msg>
<msg timestamp="20180705 16:50:16.875" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '102', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:16.875" starttime="20180705 16:50:16.790"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:17.002" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 34 for the order type: petnet
{u'sku': '1576607', u'emailid': 'South_WV_Test@petco.com', u'address type': 'South WV', u'firstname': 'South', u'city': 'Athens', u'lastname': 'WV', u's.no': '34', u'zipcode': '24712.0', u'qty': '2', u'state': 'WV', u'dayphone': '9876543210', u'addressline1': '1400 Walker Ave', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '1576607'}
Single_ Line
{u'payment type': 'Visa', u's.no': '102', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South WV region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South WV'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
1576607
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="WV" FirstName="South" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="1400 Walker Ave" AddressLine2="" AddressLine3="" City="Athens" Country="US" DayPhone="9876543210" EMailID="South_WV_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="WV" State="WV" ZipCode="24712.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="1576607" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="1400 Walker Ave" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Athens" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="South_WV_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="WV" MiddleName="" State="WV" Title="" ZipCode="24712.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="1400 Walker Ave" AddressLine2="" AddressLine3="" City="Athens" Country="US" DayPhone="9876543210" EMailID="South_WV_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="WV" State="WV" ZipCode="24712.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:17.002" starttime="20180705 16:50:16.875"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:17.551" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420172076623218" OrderNo="Y103812874"/&gt;
****************************************
****************************************
Order Header Key: 201807050420172076623218

Order is placed successfully... Order Number is Y103812874</msg>
<msg timestamp="20180705 16:50:17.551" level="INFO">${orderNo} = Y103812874</msg>
<status status="PASS" endtime="20180705 16:50:17.551" starttime="20180705 16:50:17.003"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:17.552" level="INFO">${orderNo} = Y103812874</msg>
<status status="PASS" endtime="20180705 16:50:17.552" starttime="20180705 16:50:17.552"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:17.552" starttime="20180705 16:50:16.699"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:17.576" level="INFO">Authorizing the Order... Order No passed is Y103812874 and Order Header Key 201807050420172076623218
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:17.576" starttime="20180705 16:50:17.553"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:17.576" starttime="20180705 16:50:17.553"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:17.579" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:17.667" starttime="20180705 16:50:17.579"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:17.668" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812874' </msg>
<msg timestamp="20180705 16:50:17.915" level="INFO">@{queryResults} = [ ('Y103812874', '201807050420172076623218', '201807050420172076623219', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:17.916" starttime="20180705 16:50:17.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:17.917" level="INFO">${orderLineKey} = 201807050420172076623219</msg>
<status status="PASS" endtime="20180705 16:50:17.917" starttime="20180705 16:50:17.916"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:17.917" starttime="20180705 16:50:17.917"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:17.918" starttime="20180705 16:50:17.577"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:20.229" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812874'
[('Y103812874', '201807050420172076623218', '201807050420172076623219', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812874"  OrderLineKey="201807050420172076623219" OrderHeaderKey="201807050420172076623218" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:20.229" starttime="20180705 16:50:17.919"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:20.324" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812874' OrderHeaderKey='201807050420172076623218' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:20.325" starttime="20180705 16:50:20.229"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:20.372" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:20.372" starttime="20180705 16:50:20.325"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:20.372" starttime="20180705 16:50:17.918"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:21.119" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812874'
[('Y103812874', '201807050420172076623218', '201807050420172076623219', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812874" OrderHeaderKey="201807050420172076623218" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420172076623218" OrderLineKey="201807050420172076623219"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:21.120" starttime="20180705 16:50:20.374"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:21.120" starttime="20180705 16:50:20.373"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:21.121" critical="yes" starttime="20180705 16:50:16.698"></status>
</test>
<test id="s1-t7" name="OMS_TC_103_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South AL region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:21.126" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:21.126" starttime="20180705 16:50:21.126"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:21.216" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:21.216" starttime="20180705 16:50:21.127"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:21.217" level="INFO">OMS_TC_103_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South AL region</msg>
<msg timestamp="20180705 16:50:21.217" level="INFO">${ScenarioNumber} = 103</msg>
<status status="PASS" endtime="20180705 16:50:21.217" starttime="20180705 16:50:21.217"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:21.304" level="INFO">{u'payment type': 'Visa', u's.no': '103', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South AL region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South AL'}</msg>
<msg timestamp="20180705 16:50:21.304" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '103', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:21.304" starttime="20180705 16:50:21.217"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:21.417" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 35 for the order type: petnet
{u'sku': '1316524', u'emailid': 'South_AL_Test@petco.com', u'address type': 'South AL', u'firstname': 'South', u'city': 'Muscadine', u'lastname': 'AL', u's.no': '35', u'zipcode': '36269.0', u'qty': '2', u'state': 'AL', u'dayphone': '9876543210', u'addressline1': '1407 24th Ave S', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '1316524'}
Single_ Line
{u'payment type': 'Visa', u's.no': '103', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South AL region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South AL'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
1316524
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="AL" FirstName="South" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="1407 24th Ave S" AddressLine2="" AddressLine3="" City="Muscadine" Country="US" DayPhone="9876543210" EMailID="South_AL_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="AL" State="AL" ZipCode="36269.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="1316524" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="1407 24th Ave S" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Muscadine" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="South_AL_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="AL" MiddleName="" State="AL" Title="" ZipCode="36269.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="1407 24th Ave S" AddressLine2="" AddressLine3="" City="Muscadine" Country="US" DayPhone="9876543210" EMailID="South_AL_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="AL" State="AL" ZipCode="36269.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:21.417" starttime="20180705 16:50:21.304"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:21.963" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420212076625583" OrderNo="Y103812875"/&gt;
****************************************
****************************************
Order Header Key: 201807050420212076625583

Order is placed successfully... Order Number is Y103812875</msg>
<msg timestamp="20180705 16:50:21.963" level="INFO">${orderNo} = Y103812875</msg>
<status status="PASS" endtime="20180705 16:50:21.963" starttime="20180705 16:50:21.417"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:21.964" level="INFO">${orderNo} = Y103812875</msg>
<status status="PASS" endtime="20180705 16:50:21.964" starttime="20180705 16:50:21.964"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:21.964" starttime="20180705 16:50:21.125"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:22.040" level="INFO">Authorizing the Order... Order No passed is Y103812875 and Order Header Key 201807050420212076625583
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:22.040" starttime="20180705 16:50:21.965"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:22.040" starttime="20180705 16:50:21.965"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:22.042" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:22.104" starttime="20180705 16:50:22.041"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:22.105" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812875' </msg>
<msg timestamp="20180705 16:50:22.265" level="INFO">@{queryResults} = [ ('Y103812875', '201807050420212076625583', '201807050420212076625594', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:22.265" starttime="20180705 16:50:22.104"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:22.266" level="INFO">${orderLineKey} = 201807050420212076625594</msg>
<status status="PASS" endtime="20180705 16:50:22.266" starttime="20180705 16:50:22.266"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:22.267" starttime="20180705 16:50:22.267"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:22.267" starttime="20180705 16:50:22.041"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:23.410" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812875'
[('Y103812875', '201807050420212076625583', '201807050420212076625594', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812875"  OrderLineKey="201807050420212076625594" OrderHeaderKey="201807050420212076625583" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:23.411" starttime="20180705 16:50:22.268"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:23.451" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812875' OrderHeaderKey='201807050420212076625583' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:23.451" starttime="20180705 16:50:23.411"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:23.522" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:23.522" starttime="20180705 16:50:23.451"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:23.522" starttime="20180705 16:50:22.267"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:24.169" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812875'
[('Y103812875', '201807050420212076625583', '201807050420212076625594', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812875" OrderHeaderKey="201807050420212076625583" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420212076625583" OrderLineKey="201807050420212076625594"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Errors&gt;
    &lt;Error ErrorCode="Unknown Error"
        ErrorDescription="Error description not available"
        ErrorRelatedMoreInfo="Exception in PTConfirmShipForSO.callConfirmShipment &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&gt;&amp;#xa;&amp;lt;Errors&gt;&amp;#xa;    &amp;lt;Error ErrorCode=&amp;quot;YFS10055&amp;quot;&amp;#xa;        ErrorDescription=&amp;quot;YFS:Invalid Order Release No.&amp;quot;&amp;#xa;        ErrorRelatedMoreInfo=&amp;quot;&amp;quot; ErrorUniqueExceptionId=&amp;quot;172.27.32.4515307896238900000000000999&amp;quot;&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ErrorCode&amp;quot; Value=&amp;quot;YFS10055&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ErrorDescription&amp;quot; Value=&amp;quot;YFS:Invalid Order Release No.&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;OrderReleaseKey&amp;quot; Value=&amp;quot;&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ReleaseNo&amp;quot; Value=&amp;quot;1&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ErrorUniqueExceptionId&amp;quot; Value=&amp;quot;172.27.32.4515307896238900000000000999&amp;quot;/&gt;&amp;#xa;        &amp;lt;Stack&gt;com.yantra.yfc.util.YFCException&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.fillFlags(YDMChangeShipmentImpl.java:7956)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.beforeCreateShipment(YDMChangeShipmentImpl.java:904)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.changeShipment(YDMChangeShipmentImpl.java:351)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.confirmShipment(YDMChangeShipmentImpl.java:287)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMConfirmShipment.confirmShipment(YDMConfirmShipment.java:50)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMConfirmShipment.confirmShipment(YDMConfirmShipment.java:45)&amp;#xa;&amp;#x9;at com.yantra.ydm.api.YDMApiImpl.confirmShipment(YDMApiImpl.java:1356)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor321.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiHelper.invokeLocalApi(ApiHelper.java:805)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiHelper.invoke(ApiHelper.java:695)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.DefaultIntegrationFlow.invoke(DefaultIntegrationFlow.java:223)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.DefaultIntegrationFlow.invoke(DefaultIntegrationFlow.java:97)&amp;#xa;&amp;#x9;at com.ibm.sterling.afc.fwk.api.modutil.XapiRepositoryImpl$1.invoke(XapiRepositoryImpl.java:45)&amp;#xa;&amp;#x9;at com.yantra.interop.client.XApiRequestDispatcher.invoke(XApiRequestDispatcher.java:83)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.IntegrationFlowAdapter.invoke(IntegrationFlowAdapter.java:25)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiRequestDispatcher.invoke(ApiRequestDispatcher.java:79)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.callMethod(YIFApiInvokeHandler.java:65)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.invoke(YIFApiInvokeHandler.java:43)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropLocalClientAdapter.invoke(InteropLocalClientAdapter.java:42)&amp;#xa;&amp;#x9;at com.yantra.interop.client.ClientAPICallHandler.invoke(ClientAPICallHandler.java:77)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.AutoApiClient.invoke(AutoApiClient.java:76)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy24.invoke(Unknown Source)&amp;#xa;&amp;#x9;at com.petco.oms.util.PTCommonUtil.invoke(Unknown Source)&amp;#xa;&amp;#x9;at com.petco.oms.util.PTCommonUtil.invokeAPI(Unknown Source)&amp;#xa;&amp;#x9;at com.petco.oms.orderfulfillment.api.PTConfirmShipForSO.callConfirmShipment(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor320.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiHelper.invoke(ApiHelper.java:223)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ApiFlowComponent.execute(ApiFlowComponent.java:210)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ApiFlowComponent.send(ApiFlowComponent.java:269)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ApiFlowComponent.send(ApiFlowComponent.java:272)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ConditionFlowComponent.send(ConditionFlowComponent.java:110)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.DefaultingFlowComponent.send(DefaultingFlowComponent.java:223)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.FlowExecutor.execute(FlowExecutor.java:395)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.SynchronousIntegrationFlow.executeFlow(SynchronousIntegrationFlow.java:277)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiRequestDispatcher.executeFlow(ApiRequestDispatcher.java:88)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.callMethod(YIFApiInvokeHandler.java:65)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.invoke(YIFApiInvokeHandler.java:43)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropLocalClientAdapter.invoke(InteropLocalClientAdapter.java:42)&amp;#xa;&amp;#x9;at com.yantra.interop.client.ClientAPICallHandler.invoke(ClientAPICallHandler.java:77)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.CompositeFlowComponent.execute(CompositeFlowComponent.java:91)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.CompositeFlowComponent.send(CompositeFlowComponent.java:107)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.DTEFlowComponent.send(DTEFlowComponent.java:105)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.XslFlowComponent.send(XslFlowComponent.java:195)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.FlowExecutor.execute(FlowExecutor.java:395)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.SynchronousIntegrationFlow.executeFlow(SynchronousIntegrationFlow.java:277)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiRequestDispatcher.executeFlow(ApiRequestDispatcher.java:88)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.callMethod(YIFApiInvokeHandler.java:65)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.invoke(YIFApiInvokeHandler.java:43)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropLocalClientAdapter.invoke(InteropLocalClientAdapter.java:42)&amp;#xa;&amp;#x9;at com.yantra.interop.client.ClientAPICallHandler.invoke(ClientAPICallHandler.java:77)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropHttpServlet.handleApiRequest(InteropHttpServlet.java:579)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropHttpServlet.processRequest(InteropHttpServlet.java:222)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropHttpServlet.doPost(InteropHttpServlet.java:174)&amp;#xa;&amp;#x9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)&amp;#xa;&amp;#x9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:668)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97)&amp;#xa;&amp;#x9;at com.sterlingcommerce.security.dv.web.SCUIRequestValidatorFilter.doFilter(SCUIRequestValidatorFilter.java:43)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.security.dv.web.SCUISafeRequestFilter.doFilter(SCUISafeRequestFilter.java:64)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.security.csrf.SCUIcsrfFilter.doFilter(SCUIcsrfFilter.java:102)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.woodstock.security.FileNotFoundSuppressor.doFileNotFoundSuppressedFilter(FileNotFoundSuppressor.java:23)&amp;#xa;&amp;#x9;at com.sterlingcommerce.woodstock.security.CrossFrameProtectionFilter.doFilter(CrossFrameProtectionFilter.java:60)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.woodstock.security.UserAuthenticationFilter.doFilter(UserAuthenticationFilter.java:121)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:940)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287)&amp;#xa;&amp;#x9;at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)&amp;#xa;&amp;#x9;at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)&amp;#xa;&amp;#x9;at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175)&amp;#xa;&amp;#x9;at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)&amp;#xa;&amp;#x9;at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)&amp;#xa;&amp;#x9;at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)&amp;#xa;&amp;#x9;at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)&amp;#xa;&amp;#x9;at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)&amp;#xa;&amp;#x9;at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)&amp;#xa;&amp;#x9;at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1881)&amp;#xa;&amp;lt;/Stack&gt;&amp;#xa;    &amp;lt;/Error&gt;&amp;#xa;&amp;lt;/Errors&gt;&amp;#xa;" ErrorUniqueExceptionId="172.27.32.4515307896242650000000001000"/&gt;
&lt;/Errors&gt;</msg>
<msg timestamp="20180705 16:50:24.170" level="FAIL">Exception while trying to ship the Order</msg>
<status status="FAIL" endtime="20180705 16:50:24.170" starttime="20180705 16:50:23.523"></status>
</kw>
<status status="FAIL" endtime="20180705 16:50:24.170" starttime="20180705 16:50:23.523"></status>
</kw>
<status status="FAIL" endtime="20180705 16:50:24.171" critical="yes" starttime="20180705 16:50:21.123">Exception while trying to ship the Order</status>
</test>
<test id="s1-t8" name="OMS_TC_104_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest MT region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:24.176" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:24.176" starttime="20180705 16:50:24.176"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:24.292" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:24.293" starttime="20180705 16:50:24.177"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:24.293" level="INFO">OMS_TC_104_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest MT region</msg>
<msg timestamp="20180705 16:50:24.293" level="INFO">${ScenarioNumber} = 104</msg>
<status status="PASS" endtime="20180705 16:50:24.293" starttime="20180705 16:50:24.293"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:24.378" level="INFO">{u'payment type': 'Visa', u's.no': '104', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest MT region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest MT'}</msg>
<msg timestamp="20180705 16:50:24.378" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '104', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:24.378" starttime="20180705 16:50:24.293"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:24.492" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 36 for the order type: petnet
{u'sku': '1435418', u'emailid': 'Northwest_MT_Test@petco.com', u'address type': 'Northwest MT', u'firstname': 'Northwest', u'city': 'Great Falls', u'lastname': 'MT', u's.no': '36', u'zipcode': '59401.0', u'qty': '2', u'state': 'MT', u'dayphone': '9876543210', u'addressline1': '442 Chisholm Trail', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '1435418'}
Single_ Line
{u'payment type': 'Visa', u's.no': '104', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest MT region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest MT'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
1435418
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MT" FirstName="Northwest" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="442 Chisholm Trail" AddressLine2="" AddressLine3="" City="Great Falls" Country="US" DayPhone="9876543210" EMailID="Northwest_MT_Test@petco.com" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="MT" State="MT" ZipCode="59401.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="1435418" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="442 Chisholm Trail" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Great Falls" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northwest_MT_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="MT" MiddleName="" State="MT" Title="" ZipCode="59401.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="442 Chisholm Trail" AddressLine2="" AddressLine3="" City="Great Falls" Country="US" DayPhone="9876543210" EMailID="Northwest_MT_Test@petco.com" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="MT" State="MT" ZipCode="59401.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:24.492" starttime="20180705 16:50:24.379"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:25.052" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420242076630868" OrderNo="Y103812876"/&gt;
****************************************
****************************************
Order Header Key: 201807050420242076630868

Order is placed successfully... Order Number is Y103812876</msg>
<msg timestamp="20180705 16:50:25.052" level="INFO">${orderNo} = Y103812876</msg>
<status status="PASS" endtime="20180705 16:50:25.053" starttime="20180705 16:50:24.492"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:25.054" level="INFO">${orderNo} = Y103812876</msg>
<status status="PASS" endtime="20180705 16:50:25.054" starttime="20180705 16:50:25.053"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:25.054" starttime="20180705 16:50:24.175"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:25.077" level="INFO">Authorizing the Order... Order No passed is Y103812876 and Order Header Key 201807050420242076630868
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:25.078" starttime="20180705 16:50:25.055"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:25.078" starttime="20180705 16:50:25.055"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:25.079" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:25.140" starttime="20180705 16:50:25.079"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:25.141" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812876' </msg>
<msg timestamp="20180705 16:50:25.364" level="INFO">@{queryResults} = [ ('Y103812876', '201807050420242076630868', '201807050420242076630874', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:25.364" starttime="20180705 16:50:25.141"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:25.365" level="INFO">${orderLineKey} = 201807050420242076630874</msg>
<status status="PASS" endtime="20180705 16:50:25.365" starttime="20180705 16:50:25.365"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:25.366" starttime="20180705 16:50:25.365"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:25.366" starttime="20180705 16:50:25.079"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:26.287" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812876'
[('Y103812876', '201807050420242076630868', '201807050420242076630874', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812876"  OrderLineKey="201807050420242076630874" OrderHeaderKey="201807050420242076630868" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:26.288" starttime="20180705 16:50:25.367"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:26.431" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812876' OrderHeaderKey='201807050420242076630868' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:26.432" starttime="20180705 16:50:26.288"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:26.500" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:26.500" starttime="20180705 16:50:26.432"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:26.500" starttime="20180705 16:50:25.367"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:27.366" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812876'
[('Y103812876', '201807050420242076630868', '201807050420242076630874', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812876" OrderHeaderKey="201807050420242076630868" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420242076630868" OrderLineKey="201807050420242076630874"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:27.366" starttime="20180705 16:50:26.501"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:27.366" starttime="20180705 16:50:26.501"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:27.367" critical="yes" starttime="20180705 16:50:24.174"></status>
</test>
<test id="s1-t9" name="OMS_TC_105_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South LA region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:27.370" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:27.370" starttime="20180705 16:50:27.370"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:27.460" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:27.461" starttime="20180705 16:50:27.370"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:27.461" level="INFO">OMS_TC_105_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with South LA region</msg>
<msg timestamp="20180705 16:50:27.461" level="INFO">${ScenarioNumber} = 105</msg>
<status status="PASS" endtime="20180705 16:50:27.462" starttime="20180705 16:50:27.461"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:27.548" level="INFO">{u'payment type': 'Visa', u's.no': '105', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South LA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South LA'}</msg>
<msg timestamp="20180705 16:50:27.549" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '105', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:27.549" starttime="20180705 16:50:27.462"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:27.663" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 37 for the order type: petnet
{u'sku': '2280309', u'emailid': 'South_LA_Test@petco.com', u'address type': 'South LA', u'firstname': 'South', u'city': 'Metairie', u'lastname': 'LA', u's.no': '37', u'zipcode': '70003.0', u'qty': '2', u'state': 'LA', u'dayphone': '9876543210', u'addressline1': '442 Chisholm Trail', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280309'}
Single_ Line
{u'payment type': 'Visa', u's.no': '105', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with South LA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'South LA'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280309
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="LA" FirstName="South" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="442 Chisholm Trail" AddressLine2="" AddressLine3="" City="Metairie" Country="US" DayPhone="9876543210" EMailID="South_LA_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="LA" State="LA" ZipCode="70003.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280309" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="442 Chisholm Trail" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Metairie" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="South_LA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="LA" MiddleName="" State="LA" Title="" ZipCode="70003.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="442 Chisholm Trail" AddressLine2="" AddressLine3="" City="Metairie" Country="US" DayPhone="9876543210" EMailID="South_LA_Test@petco.com" EveningPhone="" FirstName="South" IsAddressVerified="" LastName="LA" State="LA" ZipCode="70003.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:27.663" starttime="20180705 16:50:27.549"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:28.209" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420272076634294" OrderNo="Y103812877"/&gt;
****************************************
****************************************
Order Header Key: 201807050420272076634294

Order is placed successfully... Order Number is Y103812877</msg>
<msg timestamp="20180705 16:50:28.209" level="INFO">${orderNo} = Y103812877</msg>
<status status="PASS" endtime="20180705 16:50:28.210" starttime="20180705 16:50:27.663"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:28.210" level="INFO">${orderNo} = Y103812877</msg>
<status status="PASS" endtime="20180705 16:50:28.210" starttime="20180705 16:50:28.210"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:28.210" starttime="20180705 16:50:27.369"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:28.236" level="INFO">Authorizing the Order... Order No passed is Y103812877 and Order Header Key 201807050420272076634294
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:28.236" starttime="20180705 16:50:28.211"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:28.236" starttime="20180705 16:50:28.211"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:28.238" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:28.310" starttime="20180705 16:50:28.238"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:28.311" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812877' </msg>
<msg timestamp="20180705 16:50:28.517" level="INFO">@{queryResults} = [ ('Y103812877', '201807050420272076634294', '201807050420272076634301', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:28.517" starttime="20180705 16:50:28.310"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:28.518" level="INFO">${orderLineKey} = 201807050420272076634301</msg>
<status status="PASS" endtime="20180705 16:50:28.518" starttime="20180705 16:50:28.517"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:28.518" starttime="20180705 16:50:28.518"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:28.519" starttime="20180705 16:50:28.237"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:29.079" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812877'
[('Y103812877', '201807050420272076634294', '201807050420272076634301', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812877"  OrderLineKey="201807050420272076634301" OrderHeaderKey="201807050420272076634294" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:29.079" starttime="20180705 16:50:28.519"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:29.216" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812877' OrderHeaderKey='201807050420272076634294' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:29.217" starttime="20180705 16:50:29.080"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:29.321" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:29.322" starttime="20180705 16:50:29.217"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:29.322" starttime="20180705 16:50:28.519"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:30.124" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812877'
[('Y103812877', '201807050420272076634294', '201807050420272076634301', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812877" OrderHeaderKey="201807050420272076634294" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420272076634294" OrderLineKey="201807050420272076634301"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:30.125" starttime="20180705 16:50:29.323"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:30.125" starttime="20180705 16:50:29.322"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:30.125" critical="yes" starttime="20180705 16:50:27.368"></status>
</test>
<test id="s1-t10" name="OMS_TC_106_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest TX region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:30.129" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:30.130" starttime="20180705 16:50:30.129"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:30.217" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:30.217" starttime="20180705 16:50:30.130"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:30.218" level="INFO">OMS_TC_106_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest TX region</msg>
<msg timestamp="20180705 16:50:30.218" level="INFO">${ScenarioNumber} = 106</msg>
<status status="PASS" endtime="20180705 16:50:30.218" starttime="20180705 16:50:30.217"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:30.302" level="INFO">{u'payment type': 'Visa', u's.no': '106', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest TX region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest TX'}</msg>
<msg timestamp="20180705 16:50:30.302" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '106', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:30.302" starttime="20180705 16:50:30.218"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:30.425" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 38 for the order type: petnet
{u'sku': '992704', u'emailid': 'Southwest_TX_Test@petco.com', u'address type': 'Southwest TX', u'firstname': 'Southwest', u'city': 'Abernathy', u'lastname': 'TX', u's.no': '38', u'zipcode': '79311.0', u'qty': '2', u'state': 'TX', u'dayphone': '9876543210', u'addressline1': '300 Franklin Ave', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '992704'}
Single_ Line
{u'payment type': 'Visa', u's.no': '106', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest TX region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest TX'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
992704
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="TX" FirstName="Southwest" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="300 Franklin Ave" AddressLine2="" AddressLine3="" City="Abernathy" Country="US" DayPhone="9876543210" EMailID="Southwest_TX_Test@petco.com" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="TX" State="TX" ZipCode="79311.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="992704" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="300 Franklin Ave" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Abernathy" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Southwest_TX_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="TX" MiddleName="" State="TX" Title="" ZipCode="79311.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="300 Franklin Ave" AddressLine2="" AddressLine3="" City="Abernathy" Country="US" DayPhone="9876543210" EMailID="Southwest_TX_Test@petco.com" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="TX" State="TX" ZipCode="79311.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:30.425" starttime="20180705 16:50:30.303"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:30.965" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420302076637082" OrderNo="Y103812878"/&gt;
****************************************
****************************************
Order Header Key: 201807050420302076637082

Order is placed successfully... Order Number is Y103812878</msg>
<msg timestamp="20180705 16:50:30.965" level="INFO">${orderNo} = Y103812878</msg>
<status status="PASS" endtime="20180705 16:50:30.965" starttime="20180705 16:50:30.425"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:30.966" level="INFO">${orderNo} = Y103812878</msg>
<status status="PASS" endtime="20180705 16:50:30.966" starttime="20180705 16:50:30.966"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:30.966" starttime="20180705 16:50:30.129"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:30.991" level="INFO">Authorizing the Order... Order No passed is Y103812878 and Order Header Key 201807050420302076637082
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:30.991" starttime="20180705 16:50:30.967"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:30.991" starttime="20180705 16:50:30.967"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:30.993" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:31.055" starttime="20180705 16:50:30.992"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:31.056" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812878' </msg>
<msg timestamp="20180705 16:50:31.347" level="INFO">@{queryResults} = [ ('Y103812878', '201807050420302076637082', '201807050420302076637083', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:31.347" starttime="20180705 16:50:31.056"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:31.348" level="INFO">${orderLineKey} = 201807050420302076637083</msg>
<status status="PASS" endtime="20180705 16:50:31.348" starttime="20180705 16:50:31.347"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:31.348" starttime="20180705 16:50:31.348"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:31.349" starttime="20180705 16:50:30.992"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:31.555" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812878'
[('Y103812878', '201807050420302076637082', '201807050420302076637083', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812878"  OrderLineKey="201807050420302076637083" OrderHeaderKey="201807050420302076637082" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:31.555" starttime="20180705 16:50:31.350"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:31.677" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812878' OrderHeaderKey='201807050420302076637082' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:31.677" starttime="20180705 16:50:31.556"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:31.735" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:31.735" starttime="20180705 16:50:31.678"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:31.735" starttime="20180705 16:50:31.349"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:32.413" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812878'
[('Y103812878', '201807050420302076637082', '201807050420302076637083', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812878" OrderHeaderKey="201807050420302076637082" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420302076637082" OrderLineKey="201807050420302076637083"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:32.413" starttime="20180705 16:50:31.736"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:32.414" starttime="20180705 16:50:31.736"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:32.414" critical="yes" starttime="20180705 16:50:30.127"></status>
</test>
<test id="s1-t11" name="OMS_TC_107_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest NE region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:32.418" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:32.419" starttime="20180705 16:50:32.418"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:32.504" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:32.504" starttime="20180705 16:50:32.419"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:32.505" level="INFO">OMS_TC_107_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest NE region</msg>
<msg timestamp="20180705 16:50:32.505" level="INFO">${ScenarioNumber} = 107</msg>
<status status="PASS" endtime="20180705 16:50:32.505" starttime="20180705 16:50:32.505"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:32.590" level="INFO">{u'payment type': 'Visa', u's.no': '107', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest NE region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest NE'}</msg>
<msg timestamp="20180705 16:50:32.590" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '107', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:32.590" starttime="20180705 16:50:32.505"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:32.703" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 39 for the order type: petnet
{u'sku': '2280691', u'emailid': 'Northwest_NE_Test@petco.com', u'address type': 'Northwest NE', u'firstname': 'Northwest', u'city': 'Bushnell', u'lastname': 'NE', u's.no': '39', u'zipcode': '69128.0', u'qty': '2', u'state': 'NE', u'dayphone': '9876543210', u'addressline1': '300 Franklin Ave', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '107', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest NE region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest NE'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="NE" FirstName="Northwest" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="300 Franklin Ave" AddressLine2="" AddressLine3="" City="Bushnell" Country="US" DayPhone="9876543210" EMailID="Northwest_NE_Test@petco.com" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="NE" State="NE" ZipCode="69128.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="300 Franklin Ave" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Bushnell" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northwest_NE_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="NE" MiddleName="" State="NE" Title="" ZipCode="69128.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="300 Franklin Ave" AddressLine2="" AddressLine3="" City="Bushnell" Country="US" DayPhone="9876543210" EMailID="Northwest_NE_Test@petco.com" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="NE" State="NE" ZipCode="69128.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:32.703" starttime="20180705 16:50:32.590"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:33.222" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420322076637125" OrderNo="Y103812879"/&gt;
****************************************
****************************************
Order Header Key: 201807050420322076637125

Order is placed successfully... Order Number is Y103812879</msg>
<msg timestamp="20180705 16:50:33.223" level="INFO">${orderNo} = Y103812879</msg>
<status status="PASS" endtime="20180705 16:50:33.223" starttime="20180705 16:50:32.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:33.223" level="INFO">${orderNo} = Y103812879</msg>
<status status="PASS" endtime="20180705 16:50:33.223" starttime="20180705 16:50:33.223"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:33.224" starttime="20180705 16:50:32.418"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:33.255" level="INFO">Authorizing the Order... Order No passed is Y103812879 and Order Header Key 201807050420322076637125
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:33.255" starttime="20180705 16:50:33.224"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:33.256" starttime="20180705 16:50:33.224"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:33.264" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:33.329" starttime="20180705 16:50:33.263"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:33.330" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812879' </msg>
<msg timestamp="20180705 16:50:33.608" level="INFO">@{queryResults} = [ ('Y103812879', '201807050420322076637125', '201807050420322076637126', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:33.608" starttime="20180705 16:50:33.330"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:33.609" level="INFO">${orderLineKey} = 201807050420322076637126</msg>
<status status="PASS" endtime="20180705 16:50:33.609" starttime="20180705 16:50:33.608"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:33.609" starttime="20180705 16:50:33.609"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:33.610" starttime="20180705 16:50:33.256"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:33.868" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812879'
[('Y103812879', '201807050420322076637125', '201807050420322076637126', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812879"  OrderLineKey="201807050420322076637126" OrderHeaderKey="201807050420322076637125" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:33.868" starttime="20180705 16:50:33.610"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:34.060" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812879' OrderHeaderKey='201807050420322076637125' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:34.060" starttime="20180705 16:50:33.868"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:34.124" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:34.124" starttime="20180705 16:50:34.061"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:34.124" starttime="20180705 16:50:33.610"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:34.815" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812879'
[('Y103812879', '201807050420322076637125', '201807050420322076637126', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812879" OrderHeaderKey="201807050420322076637125" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420322076637125" OrderLineKey="201807050420322076637126"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:34.815" starttime="20180705 16:50:34.125"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:34.815" starttime="20180705 16:50:34.125"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:34.816" critical="yes" starttime="20180705 16:50:32.417"></status>
</test>
<test id="s1-t12" name="OMS_TC_108_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest NV region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:34.820" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:34.820" starttime="20180705 16:50:34.820"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:34.908" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:34.908" starttime="20180705 16:50:34.821"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:34.909" level="INFO">OMS_TC_108_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest NV region</msg>
<msg timestamp="20180705 16:50:34.909" level="INFO">${ScenarioNumber} = 108</msg>
<status status="PASS" endtime="20180705 16:50:34.909" starttime="20180705 16:50:34.909"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:34.993" level="INFO">{u'payment type': 'Visa', u's.no': '108', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest NV region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest NV'}</msg>
<msg timestamp="20180705 16:50:34.994" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '108', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:34.994" starttime="20180705 16:50:34.909"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:35.115" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 42 for the order type: petnet
{u'sku': '1435418', u'emailid': 'Southwest_NV_Test@petco.com', u'address type': 'Southwest NV', u'firstname': 'Southwest', u'city': 'Alamo', u'lastname': 'NV', u's.no': '42', u'zipcode': '89001.0', u'qty': '2', u'state': 'NV', u'dayphone': '9876543210', u'addressline1': '7210 Hardy Rd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '1435418'}
Single_ Line
{u'payment type': 'Visa', u's.no': '108', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest NV region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest NV'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
1435418
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="NV" FirstName="Southwest" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="7210 Hardy Rd" AddressLine2="" AddressLine3="" City="Alamo" Country="US" DayPhone="9876543210" EMailID="Southwest_NV_Test@petco.com" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="NV" State="NV" ZipCode="89001.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="1435418" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="7210 Hardy Rd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Alamo" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Southwest_NV_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="NV" MiddleName="" State="NV" Title="" ZipCode="89001.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="7210 Hardy Rd" AddressLine2="" AddressLine3="" City="Alamo" Country="US" DayPhone="9876543210" EMailID="Southwest_NV_Test@petco.com" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="NV" State="NV" ZipCode="89001.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:35.115" starttime="20180705 16:50:34.994"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:35.666" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420352076637165" OrderNo="Y103812880"/&gt;
****************************************
****************************************
Order Header Key: 201807050420352076637165

Order is placed successfully... Order Number is Y103812880</msg>
<msg timestamp="20180705 16:50:35.666" level="INFO">${orderNo} = Y103812880</msg>
<status status="PASS" endtime="20180705 16:50:35.666" starttime="20180705 16:50:35.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:35.667" level="INFO">${orderNo} = Y103812880</msg>
<status status="PASS" endtime="20180705 16:50:35.667" starttime="20180705 16:50:35.667"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:35.667" starttime="20180705 16:50:34.819"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:35.694" level="INFO">Authorizing the Order... Order No passed is Y103812880 and Order Header Key 201807050420352076637165
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:35.695" starttime="20180705 16:50:35.668"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:35.695" starttime="20180705 16:50:35.668"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:35.696" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:35.768" starttime="20180705 16:50:35.696"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:35.769" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812880' </msg>
<msg timestamp="20180705 16:50:36.030" level="INFO">@{queryResults} = [ ('Y103812880', '201807050420352076637165', '201807050420352076637166', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:36.030" starttime="20180705 16:50:35.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:36.031" level="INFO">${orderLineKey} = 201807050420352076637166</msg>
<status status="PASS" endtime="20180705 16:50:36.031" starttime="20180705 16:50:36.030"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:36.031" starttime="20180705 16:50:36.031"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:36.031" starttime="20180705 16:50:35.696"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:36.291" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812880'
[('Y103812880', '201807050420352076637165', '201807050420352076637166', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812880"  OrderLineKey="201807050420352076637166" OrderHeaderKey="201807050420352076637165" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:36.291" starttime="20180705 16:50:36.032"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:36.410" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812880' OrderHeaderKey='201807050420352076637165' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:36.410" starttime="20180705 16:50:36.291"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:36.469" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:36.469" starttime="20180705 16:50:36.410"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:36.469" starttime="20180705 16:50:36.032"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:37.151" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812880'
[('Y103812880', '201807050420352076637165', '201807050420352076637166', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812880" OrderHeaderKey="201807050420352076637165" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420352076637165" OrderLineKey="201807050420352076637166"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:37.152" starttime="20180705 16:50:36.470"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:37.152" starttime="20180705 16:50:36.470"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:37.153" critical="yes" starttime="20180705 16:50:34.818"></status>
</test>
<test id="s1-t13" name="OMS_TC_109_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest WA region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:37.158" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:37.158" starttime="20180705 16:50:37.157"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:37.243" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:37.243" starttime="20180705 16:50:37.158"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:37.244" level="INFO">OMS_TC_109_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest WA region</msg>
<msg timestamp="20180705 16:50:37.244" level="INFO">${ScenarioNumber} = 109</msg>
<status status="PASS" endtime="20180705 16:50:37.244" starttime="20180705 16:50:37.243"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:37.330" level="INFO">{u'payment type': 'Visa', u's.no': '109', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest WA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest WA'}</msg>
<msg timestamp="20180705 16:50:37.330" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '109', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:37.331" starttime="20180705 16:50:37.244"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:37.444" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 40 for the order type: petnet
{u'sku': '1576607', u'emailid': 'Northwest_WA_Test@petco.com', u'address type': 'Northwest WA', u'firstname': 'Northwest', u'city': 'Omak', u'lastname': 'WA', u's.no': '40', u'zipcode': '98841.0', u'qty': '2', u'state': 'WA', u'dayphone': '9876543210', u'addressline1': '2200 N Maple Ave', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '1576607'}
Single_ Line
{u'payment type': 'Visa', u's.no': '109', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest WA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest WA'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
1576607
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="WA" FirstName="Northwest" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="2200 N Maple Ave" AddressLine2="" AddressLine3="" City="Omak" Country="US" DayPhone="9876543210" EMailID="Northwest_WA_Test@petco.com" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="WA" State="WA" ZipCode="98841.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="1576607" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="2200 N Maple Ave" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Omak" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northwest_WA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="WA" MiddleName="" State="WA" Title="" ZipCode="98841.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="2200 N Maple Ave" AddressLine2="" AddressLine3="" City="Omak" Country="US" DayPhone="9876543210" EMailID="Northwest_WA_Test@petco.com" EveningPhone="" FirstName="Northwest" IsAddressVerified="" LastName="WA" State="WA" ZipCode="98841.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:37.444" starttime="20180705 16:50:37.331"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:37.940" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420372076637196" OrderNo="Y103812881"/&gt;
****************************************
****************************************
Order Header Key: 201807050420372076637196

Order is placed successfully... Order Number is Y103812881</msg>
<msg timestamp="20180705 16:50:37.941" level="INFO">${orderNo} = Y103812881</msg>
<status status="PASS" endtime="20180705 16:50:37.941" starttime="20180705 16:50:37.444"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:37.941" level="INFO">${orderNo} = Y103812881</msg>
<status status="PASS" endtime="20180705 16:50:37.942" starttime="20180705 16:50:37.941"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:37.942" starttime="20180705 16:50:37.157"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:37.969" level="INFO">Authorizing the Order... Order No passed is Y103812881 and Order Header Key 201807050420372076637196
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:37.969" starttime="20180705 16:50:37.943"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:37.969" starttime="20180705 16:50:37.942"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:37.970" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:38.040" starttime="20180705 16:50:37.970"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:38.041" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812881' </msg>
<msg timestamp="20180705 16:50:38.285" level="INFO">@{queryResults} = [ ('Y103812881', '201807050420372076637196', '201807050420372076637197', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:38.285" starttime="20180705 16:50:38.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:38.286" level="INFO">${orderLineKey} = 201807050420372076637197</msg>
<status status="PASS" endtime="20180705 16:50:38.286" starttime="20180705 16:50:38.285"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:38.286" starttime="20180705 16:50:38.286"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:38.286" starttime="20180705 16:50:37.970"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:38.491" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812881'
[('Y103812881', '201807050420372076637196', '201807050420372076637197', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812881"  OrderLineKey="201807050420372076637197" OrderHeaderKey="201807050420372076637196" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:38.491" starttime="20180705 16:50:38.287"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:38.603" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812881' OrderHeaderKey='201807050420372076637196' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:38.603" starttime="20180705 16:50:38.492"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:38.659" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:38.659" starttime="20180705 16:50:38.603"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:38.659" starttime="20180705 16:50:38.287"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:39.317" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812881'
[('Y103812881', '201807050420372076637196', '201807050420372076637197', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812881" OrderHeaderKey="201807050420372076637196" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420372076637196" OrderLineKey="201807050420372076637197"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:39.317" starttime="20180705 16:50:38.660"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:39.317" starttime="20180705 16:50:38.660"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:39.318" critical="yes" starttime="20180705 16:50:37.156"></status>
</test>
<test id="s1-t14" name="OMS_TC_110_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest CA region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:39.322" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:39.322" starttime="20180705 16:50:39.322"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:39.409" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:39.409" starttime="20180705 16:50:39.322"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:39.410" level="INFO">OMS_TC_110_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest CA region</msg>
<msg timestamp="20180705 16:50:39.410" level="INFO">${ScenarioNumber} = 110</msg>
<status status="PASS" endtime="20180705 16:50:39.410" starttime="20180705 16:50:39.409"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:39.495" level="INFO">{u'payment type': 'Visa', u's.no': '110', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest CA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest CA'}</msg>
<msg timestamp="20180705 16:50:39.496" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '110', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:39.496" starttime="20180705 16:50:39.410"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:39.612" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 41 for the order type: petnet
{u'sku': '1316524', u'emailid': 'Southwest_CA_Test@petco.com', u'address type': 'Southwest CA', u'firstname': 'Southwest', u'city': 'Blythe', u'lastname': 'CA', u's.no': '41', u'zipcode': '92225.0', u'qty': '2', u'state': 'CA', u'dayphone': '9876543210', u'addressline1': '200 W Interstate 20', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '1316524'}
Single_ Line
{u'payment type': 'Visa', u's.no': '110', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest CA region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest CA'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
1316524
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="CA" FirstName="Southwest" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="200 W Interstate 20" AddressLine2="" AddressLine3="" City="Blythe" Country="US" DayPhone="9876543210" EMailID="Southwest_CA_Test@petco.com" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="CA" State="CA" ZipCode="92225.0"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="1316524" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="200 W Interstate 20" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Blythe" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Southwest_CA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="CA" MiddleName="" State="CA" Title="" ZipCode="92225.0"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="200 W Interstate 20" AddressLine2="" AddressLine3="" City="Blythe" Country="US" DayPhone="9876543210" EMailID="Southwest_CA_Test@petco.com" EveningPhone="" FirstName="Southwest" IsAddressVerified="" LastName="CA" State="CA" ZipCode="92225.0"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:39.612" starttime="20180705 16:50:39.496"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:40.163" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420392076637610" OrderNo="Y103812882"/&gt;
****************************************
****************************************
Order Header Key: 201807050420392076637610

Order is placed successfully... Order Number is Y103812882</msg>
<msg timestamp="20180705 16:50:40.164" level="INFO">${orderNo} = Y103812882</msg>
<status status="PASS" endtime="20180705 16:50:40.164" starttime="20180705 16:50:39.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:40.164" level="INFO">${orderNo} = Y103812882</msg>
<status status="PASS" endtime="20180705 16:50:40.165" starttime="20180705 16:50:40.164"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:40.165" starttime="20180705 16:50:39.321"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:40.187" level="INFO">Authorizing the Order... Order No passed is Y103812882 and Order Header Key 201807050420392076637610
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:40.187" starttime="20180705 16:50:40.166"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:40.188" starttime="20180705 16:50:40.165"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:40.189" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:40.294" starttime="20180705 16:50:40.189"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:40.295" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812882' </msg>
<msg timestamp="20180705 16:50:40.509" level="INFO">@{queryResults} = [ ('Y103812882', '201807050420392076637610', '201807050420392076637611', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:40.509" starttime="20180705 16:50:40.294"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:40.510" level="INFO">${orderLineKey} = 201807050420392076637611</msg>
<status status="PASS" endtime="20180705 16:50:40.510" starttime="20180705 16:50:40.509"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:40.510" starttime="20180705 16:50:40.510"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:40.511" starttime="20180705 16:50:40.188"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:41.087" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812882'
[('Y103812882', '201807050420392076637610', '201807050420392076637611', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812882"  OrderLineKey="201807050420392076637611" OrderHeaderKey="201807050420392076637610" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:41.087" starttime="20180705 16:50:40.512"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:41.108" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812882' OrderHeaderKey='201807050420392076637610' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:41.108" starttime="20180705 16:50:41.087"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:41.168" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:41.168" starttime="20180705 16:50:41.108"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:41.169" starttime="20180705 16:50:40.511"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:41.343" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812882'
[('Y103812882', '201807050420392076637610', '201807050420392076637611', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812882" OrderHeaderKey="201807050420392076637610" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420392076637610" OrderLineKey="201807050420392076637611"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Errors&gt;
    &lt;Error ErrorCode="Unknown Error"
        ErrorDescription="Error description not available"
        ErrorRelatedMoreInfo="Exception in PTConfirmShipForSO.callConfirmShipment &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&gt;&amp;#xa;&amp;lt;Errors&gt;&amp;#xa;    &amp;lt;Error ErrorCode=&amp;quot;YFS10055&amp;quot;&amp;#xa;        ErrorDescription=&amp;quot;YFS:Invalid Order Release No.&amp;quot;&amp;#xa;        ErrorRelatedMoreInfo=&amp;quot;&amp;quot; ErrorUniqueExceptionId=&amp;quot;172.27.32.4515307896415250000000001009&amp;quot;&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ErrorCode&amp;quot; Value=&amp;quot;YFS10055&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ErrorDescription&amp;quot; Value=&amp;quot;YFS:Invalid Order Release No.&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;OrderReleaseKey&amp;quot; Value=&amp;quot;&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ReleaseNo&amp;quot; Value=&amp;quot;1&amp;quot;/&gt;&amp;#xa;        &amp;lt;Attribute Name=&amp;quot;ErrorUniqueExceptionId&amp;quot; Value=&amp;quot;172.27.32.4515307896415250000000001009&amp;quot;/&gt;&amp;#xa;        &amp;lt;Stack&gt;com.yantra.yfc.util.YFCException&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.fillFlags(YDMChangeShipmentImpl.java:7956)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.beforeCreateShipment(YDMChangeShipmentImpl.java:904)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.changeShipment(YDMChangeShipmentImpl.java:351)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMChangeShipmentImpl.confirmShipment(YDMChangeShipmentImpl.java:287)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMConfirmShipment.confirmShipment(YDMConfirmShipment.java:50)&amp;#xa;&amp;#x9;at com.yantra.ydm.business.YDMConfirmShipment.confirmShipment(YDMConfirmShipment.java:45)&amp;#xa;&amp;#x9;at com.yantra.ydm.api.YDMApiImpl.confirmShipment(YDMApiImpl.java:1356)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor321.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiHelper.invokeLocalApi(ApiHelper.java:805)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiHelper.invoke(ApiHelper.java:695)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.DefaultIntegrationFlow.invoke(DefaultIntegrationFlow.java:223)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.DefaultIntegrationFlow.invoke(DefaultIntegrationFlow.java:97)&amp;#xa;&amp;#x9;at com.ibm.sterling.afc.fwk.api.modutil.XapiRepositoryImpl$1.invoke(XapiRepositoryImpl.java:45)&amp;#xa;&amp;#x9;at com.yantra.interop.client.XApiRequestDispatcher.invoke(XApiRequestDispatcher.java:83)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.IntegrationFlowAdapter.invoke(IntegrationFlowAdapter.java:25)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiRequestDispatcher.invoke(ApiRequestDispatcher.java:79)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.callMethod(YIFApiInvokeHandler.java:65)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.invoke(YIFApiInvokeHandler.java:43)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropLocalClientAdapter.invoke(InteropLocalClientAdapter.java:42)&amp;#xa;&amp;#x9;at com.yantra.interop.client.ClientAPICallHandler.invoke(ClientAPICallHandler.java:77)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.AutoApiClient.invoke(AutoApiClient.java:76)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy24.invoke(Unknown Source)&amp;#xa;&amp;#x9;at com.petco.oms.util.PTCommonUtil.invoke(Unknown Source)&amp;#xa;&amp;#x9;at com.petco.oms.util.PTCommonUtil.invokeAPI(Unknown Source)&amp;#xa;&amp;#x9;at com.petco.oms.orderfulfillment.api.PTConfirmShipForSO.callConfirmShipment(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor320.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiHelper.invoke(ApiHelper.java:223)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ApiFlowComponent.execute(ApiFlowComponent.java:210)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ApiFlowComponent.send(ApiFlowComponent.java:269)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ApiFlowComponent.send(ApiFlowComponent.java:272)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.ConditionFlowComponent.send(ConditionFlowComponent.java:110)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.DefaultingFlowComponent.send(DefaultingFlowComponent.java:223)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.FlowExecutor.execute(FlowExecutor.java:395)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.SynchronousIntegrationFlow.executeFlow(SynchronousIntegrationFlow.java:277)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiRequestDispatcher.executeFlow(ApiRequestDispatcher.java:88)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.callMethod(YIFApiInvokeHandler.java:65)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.invoke(YIFApiInvokeHandler.java:43)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropLocalClientAdapter.invoke(InteropLocalClientAdapter.java:42)&amp;#xa;&amp;#x9;at com.yantra.interop.client.ClientAPICallHandler.invoke(ClientAPICallHandler.java:77)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.CompositeFlowComponent.execute(CompositeFlowComponent.java:91)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.CompositeFlowComponent.send(CompositeFlowComponent.java:107)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.DTEFlowComponent.send(DTEFlowComponent.java:105)&amp;#xa;&amp;#x9;at com.yantra.interop.services.flowcomponents.XslFlowComponent.send(XslFlowComponent.java:195)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.FlowExecutor.execute(FlowExecutor.java:395)&amp;#xa;&amp;#x9;at com.yantra.integration.adapter.SynchronousIntegrationFlow.executeFlow(SynchronousIntegrationFlow.java:277)&amp;#xa;&amp;#x9;at com.yantra.interop.services.api.ApiRequestDispatcher.executeFlow(ApiRequestDispatcher.java:88)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.callMethod(YIFApiInvokeHandler.java:65)&amp;#xa;&amp;#x9;at com.yantra.interop.client.YIFApiInvokeHandler.invoke(YIFApiInvokeHandler.java:43)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)&amp;#xa;&amp;#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)&amp;#xa;&amp;#x9;at java.lang.reflect.Method.invoke(Method.java:620)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropLocalClientAdapter.invoke(InteropLocalClientAdapter.java:42)&amp;#xa;&amp;#x9;at com.yantra.interop.client.ClientAPICallHandler.invoke(ClientAPICallHandler.java:77)&amp;#xa;&amp;#x9;at com.sun.proxy.$Proxy23.executeFlow(Unknown Source)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropHttpServlet.handleApiRequest(InteropHttpServlet.java:579)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropHttpServlet.processRequest(InteropHttpServlet.java:222)&amp;#xa;&amp;#x9;at com.yantra.interop.client.InteropHttpServlet.doPost(InteropHttpServlet.java:174)&amp;#xa;&amp;#x9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)&amp;#xa;&amp;#x9;at javax.servlet.http.HttpServlet.service(HttpServlet.java:668)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1232)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:781)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:480)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97)&amp;#xa;&amp;#x9;at com.sterlingcommerce.security.dv.web.SCUIRequestValidatorFilter.doFilter(SCUIRequestValidatorFilter.java:43)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.security.dv.web.SCUISafeRequestFilter.doFilter(SCUISafeRequestFilter.java:64)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.security.csrf.SCUIcsrfFilter.doFilter(SCUIcsrfFilter.java:102)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.woodstock.security.FileNotFoundSuppressor.doFileNotFoundSuppressedFilter(FileNotFoundSuppressor.java:23)&amp;#xa;&amp;#x9;at com.sterlingcommerce.woodstock.security.CrossFrameProtectionFilter.doFilter(CrossFrameProtectionFilter.java:60)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.sterlingcommerce.woodstock.security.UserAuthenticationFilter.doFilter(UserAuthenticationFilter.java:121)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:940)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817)&amp;#xa;&amp;#x9;at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316)&amp;#xa;&amp;#x9;at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287)&amp;#xa;&amp;#x9;at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)&amp;#xa;&amp;#x9;at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)&amp;#xa;&amp;#x9;at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175)&amp;#xa;&amp;#x9;at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)&amp;#xa;&amp;#x9;at com.ibm.io.async.AsyncChannelFuture$1.run(AsyncChannelFuture.java:205)&amp;#xa;&amp;#x9;at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1881)&amp;#xa;&amp;lt;/Stack&gt;&amp;#xa;    &amp;lt;/Error&gt;&amp;#xa;&amp;lt;/Errors&gt;&amp;#xa;" ErrorUniqueExceptionId="172.27.32.4515307896415660000000001010"/&gt;
&lt;/Errors&gt;</msg>
<msg timestamp="20180705 16:50:41.344" level="FAIL">Exception while trying to ship the Order</msg>
<status status="FAIL" endtime="20180705 16:50:41.344" starttime="20180705 16:50:41.170"></status>
</kw>
<status status="FAIL" endtime="20180705 16:50:41.345" starttime="20180705 16:50:41.169"></status>
</kw>
<status status="FAIL" endtime="20180705 16:50:41.345" critical="yes" starttime="20180705 16:50:39.320">Exception while trying to ship the Order</status>
</test>
<test id="s1-t15" name="OMS_TC_111_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast OH region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:41.350" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:41.350" starttime="20180705 16:50:41.349"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:41.433" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:41.433" starttime="20180705 16:50:41.350"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:41.434" level="INFO">OMS_TC_111_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northeast OH region</msg>
<msg timestamp="20180705 16:50:41.434" level="INFO">${ScenarioNumber} = 111</msg>
<status status="PASS" endtime="20180705 16:50:41.434" starttime="20180705 16:50:41.433"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:41.518" level="INFO">{u'payment type': 'Visa', u's.no': '111', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast OH region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast OH'}</msg>
<msg timestamp="20180705 16:50:41.518" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '111', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:41.518" starttime="20180705 16:50:41.434"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:41.635" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 29 for the order type: petnet
{u'sku': '2280691', u'emailid': 'Northeast_MA_Test@petco.com', u'address type': 'Northeast MA', u'firstname': 'Northeast', u'city': 'Millville', u'lastname': 'MA', u's.no': '29', u'zipcode': '01529', u'qty': '2', u'state': 'MA', u'dayphone': '9876543210', u'addressline1': '117 Wilton Blvd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '111', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northeast OH region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northeast OH'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MA" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Millville" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" MiddleName="" State="MA" Title="" ZipCode="01529"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:41.635" starttime="20180705 16:50:41.518"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:42.125" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420412076637631" OrderNo="Y103812883"/&gt;
****************************************
****************************************
Order Header Key: 201807050420412076637631

Order is placed successfully... Order Number is Y103812883</msg>
<msg timestamp="20180705 16:50:42.125" level="INFO">${orderNo} = Y103812883</msg>
<status status="PASS" endtime="20180705 16:50:42.125" starttime="20180705 16:50:41.635"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:42.126" level="INFO">${orderNo} = Y103812883</msg>
<status status="PASS" endtime="20180705 16:50:42.126" starttime="20180705 16:50:42.126"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:42.126" starttime="20180705 16:50:41.349"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:42.149" level="INFO">Authorizing the Order... Order No passed is Y103812883 and Order Header Key 201807050420412076637631
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:42.150" starttime="20180705 16:50:42.127"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:42.150" starttime="20180705 16:50:42.127"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:42.151" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:42.221" starttime="20180705 16:50:42.151"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:42.222" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812883' </msg>
<msg timestamp="20180705 16:50:42.445" level="INFO">@{queryResults} = [ ('Y103812883', '201807050420412076637631', '201807050420412076637632', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:42.445" starttime="20180705 16:50:42.221"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:42.446" level="INFO">${orderLineKey} = 201807050420412076637632</msg>
<status status="PASS" endtime="20180705 16:50:42.446" starttime="20180705 16:50:42.445"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:42.446" starttime="20180705 16:50:42.446"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:42.447" starttime="20180705 16:50:42.151"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:42.669" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812883'
[('Y103812883', '201807050420412076637631', '201807050420412076637632', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812883"  OrderLineKey="201807050420412076637632" OrderHeaderKey="201807050420412076637631" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:42.669" starttime="20180705 16:50:42.447"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:42.779" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812883' OrderHeaderKey='201807050420412076637631' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:42.779" starttime="20180705 16:50:42.670"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:42.835" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:42.836" starttime="20180705 16:50:42.779"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:42.836" starttime="20180705 16:50:42.447"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:43.498" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812883'
[('Y103812883', '201807050420412076637631', '201807050420412076637632', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812883" OrderHeaderKey="201807050420412076637631" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420412076637631" OrderLineKey="201807050420412076637632"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:43.498" starttime="20180705 16:50:42.837"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:43.499" starttime="20180705 16:50:42.837"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:43.499" critical="yes" starttime="20180705 16:50:41.348"></status>
</test>
<test id="s1-t16" name="OMS_TC_112_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest SD region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:43.504" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:43.504" starttime="20180705 16:50:43.503"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:43.594" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:43.594" starttime="20180705 16:50:43.504"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:43.595" level="INFO">OMS_TC_112_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest SD region</msg>
<msg timestamp="20180705 16:50:43.595" level="INFO">${ScenarioNumber} = 112</msg>
<status status="PASS" endtime="20180705 16:50:43.595" starttime="20180705 16:50:43.595"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:43.679" level="INFO">{u'payment type': 'Visa', u's.no': '112', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest SD region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest SD'}</msg>
<msg timestamp="20180705 16:50:43.679" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '112', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:43.679" starttime="20180705 16:50:43.595"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:43.793" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 29 for the order type: petnet
{u'sku': '2280691', u'emailid': 'Northeast_MA_Test@petco.com', u'address type': 'Northeast MA', u'firstname': 'Northeast', u'city': 'Millville', u'lastname': 'MA', u's.no': '29', u'zipcode': '01529', u'qty': '2', u'state': 'MA', u'dayphone': '9876543210', u'addressline1': '117 Wilton Blvd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '112', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest SD region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest SD'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MA" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Millville" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" MiddleName="" State="MA" Title="" ZipCode="01529"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:43.793" starttime="20180705 16:50:43.680"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:44.388" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420442076637673" OrderNo="Y103812884"/&gt;
****************************************
****************************************
Order Header Key: 201807050420442076637673

Order is placed successfully... Order Number is Y103812884</msg>
<msg timestamp="20180705 16:50:44.388" level="INFO">${orderNo} = Y103812884</msg>
<status status="PASS" endtime="20180705 16:50:44.388" starttime="20180705 16:50:43.793"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:44.389" level="INFO">${orderNo} = Y103812884</msg>
<status status="PASS" endtime="20180705 16:50:44.389" starttime="20180705 16:50:44.389"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:44.389" starttime="20180705 16:50:43.503"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:44.411" level="INFO">Authorizing the Order... Order No passed is Y103812884 and Order Header Key 201807050420442076637673
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:44.411" starttime="20180705 16:50:44.391"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:44.411" starttime="20180705 16:50:44.390"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:44.413" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:44.485" starttime="20180705 16:50:44.412"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:44.486" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812884' </msg>
<msg timestamp="20180705 16:50:44.684" level="INFO">@{queryResults} = [ ('Y103812884', '201807050420442076637673', '201807050420442076637674', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:44.684" starttime="20180705 16:50:44.485"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:44.685" level="INFO">${orderLineKey} = 201807050420442076637674</msg>
<status status="PASS" endtime="20180705 16:50:44.685" starttime="20180705 16:50:44.685"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:44.686" starttime="20180705 16:50:44.685"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:44.686" starttime="20180705 16:50:44.412"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:44.937" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812884'
[('Y103812884', '201807050420442076637673', '201807050420442076637674', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812884"  OrderLineKey="201807050420442076637674" OrderHeaderKey="201807050420442076637673" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:44.937" starttime="20180705 16:50:44.687"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:45.064" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812884' OrderHeaderKey='201807050420442076637673' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:45.064" starttime="20180705 16:50:44.938"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:45.117" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:45.117" starttime="20180705 16:50:45.064"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:45.118" starttime="20180705 16:50:44.687"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:45.822" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812884'
[('Y103812884', '201807050420442076637673', '201807050420442076637674', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812884" OrderHeaderKey="201807050420442076637673" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420442076637673" OrderLineKey="201807050420442076637674"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:45.822" starttime="20180705 16:50:45.119"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:45.823" starttime="20180705 16:50:45.118"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:45.823" critical="yes" starttime="20180705 16:50:43.502"></status>
</test>
<test id="s1-t17" name="OMS_TC_113_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest UT region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:45.827" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:45.827" starttime="20180705 16:50:45.827"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:45.914" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:45.914" starttime="20180705 16:50:45.828"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:45.914" level="INFO">OMS_TC_113_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Southwest UT region</msg>
<msg timestamp="20180705 16:50:45.914" level="INFO">${ScenarioNumber} = 113</msg>
<status status="PASS" endtime="20180705 16:50:45.915" starttime="20180705 16:50:45.914"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:45.999" level="INFO">{u'payment type': 'Visa', u's.no': '113', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest UT region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest UT'}</msg>
<msg timestamp="20180705 16:50:45.999" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '113', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:45.999" starttime="20180705 16:50:45.915"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:46.113" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 29 for the order type: petnet
{u'sku': '2280691', u'emailid': 'Northeast_MA_Test@petco.com', u'address type': 'Northeast MA', u'firstname': 'Northeast', u'city': 'Millville', u'lastname': 'MA', u's.no': '29', u'zipcode': '01529', u'qty': '2', u'state': 'MA', u'dayphone': '9876543210', u'addressline1': '117 Wilton Blvd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '113', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Southwest UT region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Southwest UT'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MA" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Millville" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" MiddleName="" State="MA" Title="" ZipCode="01529"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:46.114" starttime="20180705 16:50:45.999"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:46.587" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420462076637731" OrderNo="Y103812885"/&gt;
****************************************
****************************************
Order Header Key: 201807050420462076637731

Order is placed successfully... Order Number is Y103812885</msg>
<msg timestamp="20180705 16:50:46.588" level="INFO">${orderNo} = Y103812885</msg>
<status status="PASS" endtime="20180705 16:50:46.588" starttime="20180705 16:50:46.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:46.588" level="INFO">${orderNo} = Y103812885</msg>
<status status="PASS" endtime="20180705 16:50:46.588" starttime="20180705 16:50:46.588"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:46.589" starttime="20180705 16:50:45.826"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:46.619" level="INFO">Authorizing the Order... Order No passed is Y103812885 and Order Header Key 201807050420462076637731
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:46.619" starttime="20180705 16:50:46.589"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:46.619" starttime="20180705 16:50:46.589"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:46.621" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:46.684" starttime="20180705 16:50:46.620"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:46.685" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812885' </msg>
<msg timestamp="20180705 16:50:46.942" level="INFO">@{queryResults} = [ ('Y103812885', '201807050420462076637731', '201807050420462076637732', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:46.942" starttime="20180705 16:50:46.685"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:46.943" level="INFO">${orderLineKey} = 201807050420462076637732</msg>
<status status="PASS" endtime="20180705 16:50:46.943" starttime="20180705 16:50:46.942"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:46.943" starttime="20180705 16:50:46.943"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:46.943" starttime="20180705 16:50:46.620"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:47.247" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812885'
[('Y103812885', '201807050420462076637731', '201807050420462076637732', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812885"  OrderLineKey="201807050420462076637732" OrderHeaderKey="201807050420462076637731" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:47.247" starttime="20180705 16:50:46.944"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:47.447" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812885' OrderHeaderKey='201807050420462076637731' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:47.447" starttime="20180705 16:50:47.248"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:47.505" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:47.505" starttime="20180705 16:50:47.448"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:47.505" starttime="20180705 16:50:46.944"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:48.127" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812885'
[('Y103812885', '201807050420462076637731', '201807050420462076637732', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812885" OrderHeaderKey="201807050420462076637731" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420462076637731" OrderLineKey="201807050420462076637732"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:48.127" starttime="20180705 16:50:47.506"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:48.128" starttime="20180705 16:50:47.506"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:48.128" critical="yes" starttime="20180705 16:50:45.825"></status>
</test>
<test id="s1-t18" name="OMS_TC_114_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest CO region">
<kw name="Place a Petnet Order with Single Line Item" library="Keywords">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${lst_ScenarioData}</arg>
<arg>${empty}</arg>
</arguments>
<msg timestamp="20180705 16:50:48.135" level="INFO">${lst_ScenarioData} = </msg>
<status status="PASS" endtime="20180705 16:50:48.136" starttime="20180705 16:50:48.135"></status>
</kw>
<kw name="Fetch Environment Data" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:48.219" level="INFO">Selected Environment: CSIT_New
Target URL: http://cmsomsappt01:9080/smcfs/interop/InteropHttpServlet</msg>
<status status="PASS" endtime="20180705 16:50:48.220" starttime="20180705 16:50:48.136"></status>
</kw>
<kw name="Fetch Scenario Number" library="OMSOrderPlacement">
<arguments>
<arg>${TEST NAME}</arg>
</arguments>
<assign>
<var>${ScenarioNumber}</var>
</assign>
<msg timestamp="20180705 16:50:48.220" level="INFO">OMS_TC_114_Verify whether Petnet order with Single_Line item is shipped to DC 198 only when it is placed with the address associated with Northwest CO region</msg>
<msg timestamp="20180705 16:50:48.220" level="INFO">${ScenarioNumber} = 114</msg>
<status status="PASS" endtime="20180705 16:50:48.220" starttime="20180705 16:50:48.220"></status>
</kw>
<kw name="Fetch Scenario Data" library="OMSOrderPlacement">
<arguments>
<arg>${ScenarioNumber}</arg>
</arguments>
<assign>
<var>${lst_ScenarioData}</var>
</assign>
<msg timestamp="20180705 16:50:48.303" level="INFO">{u'payment type': 'Visa', u's.no': '114', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest CO region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest CO'}</msg>
<msg timestamp="20180705 16:50:48.303" level="INFO">${lst_ScenarioData} = {u'payment type': 'Visa', u's.no': '114', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': '...</msg>
<status status="PASS" endtime="20180705 16:50:48.303" starttime="20180705 16:50:48.220"></status>
</kw>
<kw name="Frame Petnet XML" library="OMSOrderPlacement">
<arguments>
<arg>${lst_ScenarioData}</arg>
</arguments>
<msg timestamp="20180705 16:50:48.425" level="INFO">Order Type: Petnet and the service selected: PTCreateVendorOrderSyncService
northeast ma
Start of the Row: 29 End of the Row: 43
The Address is matched in the S.No: 29 for the order type: petnet
{u'sku': '2280691', u'emailid': 'Northeast_MA_Test@petco.com', u'address type': 'Northeast MA', u'firstname': 'Northeast', u'city': 'Millville', u'lastname': 'MA', u's.no': '29', u'zipcode': '01529', u'qty': '2', u'state': 'MA', u'dayphone': '9876543210', u'addressline1': '117 Wilton Blvd', u'order type': 'petnet', u'country': 'US', u'dc_id': '198'}
Expected DC: 198
{1: '2280691'}
Single_ Line
{u'payment type': 'Visa', u's.no': '114', u'to be executed': 'Y', u'service flag': 'Y', u'item type': 'Single_ Line', u'order flow': 'Order Life Cycle', u'#line items': '1', u'scenario description': 'Verify whether Petnet order with Single_ Line item and Visa is shipped to DC associated with Northwest CO region', u'shipment type': 'Full Shipment', u'number of orders': '1', u'order type': 'Petnet', u'shipping address': 'Northwest CO'}
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
0*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
-1*** Single_ Line
2280691
************ FeedingData in XML *******************
1312313213213Single_ Line
13123132132131

&lt;Order AuthorizedClient="PETNET" PETNETPONo="998877" EnterpriseCode="PETNET" EntryType="Petnet" SellerOrganizationCode="PETNET" OrderDate="2016-10-08T16:01:39-07:00" &gt;
&lt;Extn ExtnEComStoreID="6984"/&gt;
&lt;PriceInfo Currency="USD"/&gt;
&lt;PersonInfoBillTo LastName="MA" FirstName="Northeast" EmailID="automationtester@petco.com" DayPhone="9876543210"/&gt;
&lt;OrderLines&gt;
&lt;OrderLine CarrierServiceCode="UPS_FEDEX_STANDARD" DeliveryMethod="SHP" LineType="PROD" FulfillmentType="PROD" OrderedQty="2" &gt;
&lt;PersonInfoShipTo AddressID="9502197" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;Item ItemDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" ItemID="2280691" ItemShortDesc="The Missing Link Ultimate Skin and Coat Supplement For Dogs" UnitOfMeasure="EACH"/&gt;
 &lt;LinePriceInfo UnitPrice="10" IsPriceLocked="Y"/&gt; 
&lt;LineCharges/&gt;
&lt;/OrderLine&gt;
&lt;/OrderLines&gt;
&lt;PersonInfoBillTo AddressID="88173" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" AlternateEmailID="" City="Millville" Country="US" DayFaxNo="" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningFaxNo="" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" MiddleName="" State="MA" Title="" ZipCode="01529"/&gt;
&lt;PersonInfoShipTo AddressID="86163" AddressLine1="117 Wilton Blvd" AddressLine2="" AddressLine3="" City="Millville" Country="US" DayPhone="9876543210" EMailID="Northeast_MA_Test@petco.com" EveningPhone="" FirstName="Northeast" IsAddressVerified="" LastName="MA" State="MA" ZipCode="01529"/&gt;
&lt;PaymentMethods&gt;
&lt;PaymentMethod CustomerAccountNo="Amazon" PaymentReference1="Amazon" PaymentReference2="VENDOR_TENDER" PaymentType="AMAZON"/&gt;
&lt;/PaymentMethods&gt;
&lt;/Order&gt;</msg>
<status status="PASS" endtime="20180705 16:50:48.425" starttime="20180705 16:50:48.304"></status>
</kw>
<kw name="OrderPlacement Regular" library="OMSOrderPlacement">
<assign>
<var>${orderNo}</var>
</assign>
<msg timestamp="20180705 16:50:48.945" level="INFO">PTCreateVendorOrderSyncService
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Order DocumentType="0001" EnterpriseCode="PETNET" OrderHeaderKey="201807050420482076637762" OrderNo="Y103812886"/&gt;
****************************************
****************************************
Order Header Key: 201807050420482076637762

Order is placed successfully... Order Number is Y103812886</msg>
<msg timestamp="20180705 16:50:48.945" level="INFO">${orderNo} = Y103812886</msg>
<status status="PASS" endtime="20180705 16:50:48.945" starttime="20180705 16:50:48.425"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${orderNo}</arg>
</arguments>
<msg timestamp="20180705 16:50:48.946" level="INFO">${orderNo} = Y103812886</msg>
<status status="PASS" endtime="20180705 16:50:48.946" starttime="20180705 16:50:48.945"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:48.946" starttime="20180705 16:50:48.134"></status>
</kw>
<kw name="Remove the Hold and Authorize the order" library="Keywords">
<kw name="Authorize Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:48.971" level="INFO">Authorizing the Order... Order No passed is Y103812886 and Order Header Key 201807050420482076637762
Order is authorized successfully</msg>
<status status="PASS" endtime="20180705 16:50:48.971" starttime="20180705 16:50:48.947"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:48.971" starttime="20180705 16:50:48.946"></status>
</kw>
<kw name="Connecting to the Oracle Database using Robot Framework" library="Keywords">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${DB_CONNECT_STRING}</arg>
</arguments>
<msg timestamp="20180705 16:50:48.973" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('stroms/Petco123@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=CMSOMSDBT01)(PORT=1621))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=OMSSIT01)))')) </msg>
<status status="PASS" endtime="20180705 16:50:49.038" starttime="20180705 16:50:48.972"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${DB_Select_Query}'${orderNo}'</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20180705 16:50:49.039" level="INFO">Executing : Query  |  Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b where a.order_header_key=b.order_header_key and A.Order_no='Y103812886' </msg>
<msg timestamp="20180705 16:50:49.319" level="INFO">@{queryResults} = [ ('Y103812886', '201807050420482076637762', '201807050420482076637763', 2.0) ]</msg>
<status status="PASS" endtime="20180705 16:50:49.319" starttime="20180705 16:50:49.039"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<assign>
<var>${orderLineKey}</var>
</assign>
<msg timestamp="20180705 16:50:49.320" level="INFO">${orderLineKey} = 201807050420482076637763</msg>
<status status="PASS" endtime="20180705 16:50:49.320" starttime="20180705 16:50:49.319"></status>
</kw>
<kw name="Fetch Order Line Key" library="OMSOrderPlacement">
<arguments>
<arg>${orderLineKey}</arg>
</arguments>
<status status="PASS" endtime="20180705 16:50:49.320" starttime="20180705 16:50:49.320"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:49.321" starttime="20180705 16:50:48.972"></status>
</kw>
<kw name="Schedule and Release the Order" library="Keywords">
<kw name="Schedule Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:49.543" level="INFO">Scheduling the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812886'
[('Y103812886', '201807050420482076637762', '201807050420482076637763', 2.0)]
1
{'InteropApiName': 'multiApi', 'InteropApiData': '&lt;MultiApi&gt;&lt;API Name="scheduleOrder"&gt;&lt;Input&gt;\n            &lt;ScheduleOrder SubLineNo="" ScheduleAndRelease="" PrimeLineNo="" OrderNo="Y103812886"  OrderLineKey="201807050420482076637763" OrderHeaderKey="201807050420482076637762" OptimizationType="" MaximumRecords="" CarrierServiceCode="UPS_FEDEX_STANDARD" IgnoreTransactionDependencies="Y" IgnoreReleaseDate="" IgnoreMinNotificationTime="Y" EnterpriseCode="" DocumentType="" CheckInventory="Y" AllocationRuleID=""/&gt;\xc2\xa0\n            &lt;/Input&gt;\n            &lt;/API&gt;&lt;/MultiApi&gt;', 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;multiapi&gt;&lt;api name="scheduleorder"&gt;&lt;output/&gt;&lt;/api&gt;&lt;/multiapi&gt;
Order is scheduled successfully</msg>
<status status="PASS" endtime="20180705 16:50:49.544" starttime="20180705 16:50:49.321"></status>
</kw>
<kw name="Release Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:49.665" level="INFO">Releasing the Order
{'InteropApiName': 'releaseOrder', 'InteropApiData': "&lt;ReleaseOrder OrderNo='Y103812886' OrderHeaderKey='201807050420482076637762' IgnoreTransactionDependencies='Y' IgnoreReleaseDate='' CarrierServiceCode='UPS_FEDEX_STANDARD' EnterpriseCode='' DocumentType='' CheckInventory='' AllocationRuleID=''/&gt;", 'YFSEnvironment.userId': 'postestadmin', 'IsFlow': 'N'}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApiSuccess/&gt;
Order is released successfully</msg>
<status status="PASS" endtime="20180705 16:50:49.665" starttime="20180705 16:50:49.544"></status>
</kw>
<kw name="Validate Release Node" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:49.722" level="INFO">198
Getting the Release details of the Order
Order release details are fetched successfully from the OMS
Order is released to the expected node: DC_198 as expected
Validated the Release details of the order successfully</msg>
<status status="PASS" endtime="20180705 16:50:49.722" starttime="20180705 16:50:49.665"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:49.722" starttime="20180705 16:50:49.321"></status>
</kw>
<kw name="Full ship the order and check the status of the Order" library="Keywords">
<kw name="Ship Order" library="OMSOrderPlacement">
<msg timestamp="20180705 16:50:50.323" level="INFO">Shipping the Order
Fetching the Order details from the OMS database
Select A.Order_no, a.order_header_key,b.order_line_key,b.ordered_qty
               from stroms.Yfs_Order_Header a,stroms.Yfs_Order_Line b
               where a.order_header_key=b.order_header_key
               and A.Order_no='Y103812886'
[('Y103812886', '201807050420482076637762', '201807050420482076637763', 2.0)]
1
{'InteropApiName': 'PTConfrmShipAndChngShipSyncService', 'ServiceName': 'PTConfrmShipAndChngShipSyncService', 'YFSEnvironment.userId': 'postestadmin', 'InteropApiData': '&lt;Shipment  ReleaseNo="1" OrderNo="Y103812886" OrderHeaderKey="201807050420482076637762" SCAC="U10"   CarrierServiceCode="UPS_FEDEX_STANDARD"   ActualShipmentDate="2018-06-05T14:19:55.000-08:00" &gt;\n                &lt;ShipmentLines&gt;\n                &lt;ShipmentLine   ReleaseNo="1"   Quantity="2"  OrderHeaderKey="201807050420482076637762" OrderLineKey="201807050420482076637763"/&gt;\n                &lt;/ShipmentLines&gt;\n                &lt;/Shipment&gt;', 'IsFlow': 'Y'}
Order is Shipped successfully</msg>
<status status="PASS" endtime="20180705 16:50:50.324" starttime="20180705 16:50:49.723"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:50.324" starttime="20180705 16:50:49.723"></status>
</kw>
<status status="PASS" endtime="20180705 16:50:50.325" critical="yes" starttime="20180705 16:50:48.131"></status>
</test>
<status status="FAIL" endtime="20180705 16:50:50.329" starttime="20180705 16:49:55.566"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="16">Critical Tests</stat>
<stat fail="2" pass="16">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="OMS OrderLifeCycle RoughCopy" pass="16">OMS OrderLifeCycle RoughCopy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
